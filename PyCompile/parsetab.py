
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftEQNELTLEGTGEleftPLUSMINUSleftMULDIVrightUMINUSAND ASSIGN COLON COMMA DEF DIV ELSE END EQ GE GT IDENTIFIER IF LBRACE LE LPAREN LT MINUS MUL NE NOT NUMBER OR PLUS PRINT RBRACE RPAREN STRING WHILEprogram : statement_liststatement_list : statement_list statement\n                          | statementstatement : assignment_statement\n                     | print_statement\n                     | if_statement\n                     | while_statement\n                     | function_definition\n                     | tuple_statement\n                     | string_statementassignment_statement : IDENTIFIER ASSIGN expressionprint_statement : PRINT LPAREN expression RPARENtuple_statement : LPAREN expression_list RPARENstring_statement : STRINGexpression_list : expression_list COMMA expression\n                           | expressionif_statement : IF expression COLON statement_list else_statement\n                        | IF expression COLON statement_listelse_statement : ELSE COLON statement_listwhile_statement : WHILE expression COLON statement_listfunction_definition : DEF IDENTIFIER LPAREN RPAREN COLON statement_listexpression : term\n                      | expression PLUS term\n                      | expression MINUS term\n                      | expression LT term\n                      | expression LE term\n                      | expression GT term\n                      | expression GE term\n                      | expression EQ term\n                      | expression NE termterm : factor\n                | term MUL factor\n                | term DIV factorfactor : NUMBER\n                  | IDENTIFIER\n                  | LPAREN expression RPAREN\n                  | MINUS factor %prec UMINUS'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,20,21,24,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,67,69,70,71,72,],[11,11,-3,-4,-5,-6,-7,-8,-9,-10,28,28,28,31,-14,-2,28,28,28,-22,28,-31,-34,-35,-11,-13,28,28,28,28,28,28,28,28,28,28,28,-37,11,11,-12,-36,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,11,11,-17,11,11,11,11,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,17,18,24,26,27,28,32,35,47,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,67,69,70,71,72,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-14,-2,-22,-31,-34,-35,-11,-13,-37,12,12,-12,-36,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,12,12,-17,12,12,12,12,]),'IF':([0,2,3,4,5,6,7,8,9,10,17,18,24,26,27,28,32,35,47,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,67,69,70,71,72,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-14,-2,-22,-31,-34,-35,-11,-13,-37,14,14,-12,-36,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,14,14,-17,14,14,14,14,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,17,18,24,26,27,28,32,35,47,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,67,69,70,71,72,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-14,-2,-22,-31,-34,-35,-11,-13,-37,15,15,-12,-36,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,15,15,-17,15,15,15,15,]),'DEF':([0,2,3,4,5,6,7,8,9,10,17,18,24,26,27,28,32,35,47,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,67,69,70,71,72,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-14,-2,-22,-31,-34,-35,-11,-13,-37,16,16,-12,-36,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,16,16,-17,16,16,16,16,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,12,13,14,15,17,18,19,20,21,24,25,26,27,28,31,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,67,69,70,71,72,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,20,21,21,21,-14,-2,21,21,21,-22,21,-31,-34,-35,50,-11,-13,21,21,21,21,21,21,21,21,21,21,21,-37,13,13,-12,-36,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,13,13,-17,13,13,13,13,]),'STRING':([0,2,3,4,5,6,7,8,9,10,17,18,24,26,27,28,32,35,47,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,67,69,70,71,72,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-14,-2,-22,-31,-34,-35,-11,-13,-37,17,17,-12,-36,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,17,17,-17,17,17,17,17,]),'$end':([1,2,3,4,5,6,7,8,9,10,17,18,24,26,27,28,32,35,47,51,52,54,55,56,57,58,59,60,61,62,63,64,65,67,71,72,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-14,-2,-22,-31,-34,-35,-11,-13,-37,-12,-36,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,-18,-20,-17,-21,-19,]),'ELSE':([3,4,5,6,7,8,9,10,17,18,24,26,27,28,32,35,47,51,52,54,55,56,57,58,59,60,61,62,63,64,65,67,71,72,],[-3,-4,-5,-6,-7,-8,-9,-10,-14,-2,-22,-31,-34,-35,-11,-13,-37,-12,-36,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,68,-20,-17,-21,-19,]),'ASSIGN':([11,],[19,]),'NUMBER':([13,14,15,19,20,21,25,36,37,38,39,40,41,42,43,44,45,46,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'MINUS':([13,14,15,19,20,21,23,24,25,26,27,28,29,30,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,52,53,54,55,56,57,58,59,60,61,62,63,],[25,25,25,25,25,25,38,-22,25,-31,-34,-35,38,38,38,38,38,25,25,25,25,25,25,25,25,25,25,25,-37,-36,38,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,]),'RPAREN':([22,23,24,26,27,28,33,34,47,50,52,53,54,55,56,57,58,59,60,61,62,63,],[35,-16,-22,-31,-34,-35,51,52,-37,66,-36,-15,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,]),'COMMA':([22,23,24,26,27,28,47,52,53,54,55,56,57,58,59,60,61,62,63,],[36,-16,-22,-31,-34,-35,-37,-36,-15,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,]),'PLUS':([23,24,26,27,28,29,30,32,33,34,47,52,53,54,55,56,57,58,59,60,61,62,63,],[37,-22,-31,-34,-35,37,37,37,37,37,-37,-36,37,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,]),'LT':([23,24,26,27,28,29,30,32,33,34,47,52,53,54,55,56,57,58,59,60,61,62,63,],[39,-22,-31,-34,-35,39,39,39,39,39,-37,-36,39,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,]),'LE':([23,24,26,27,28,29,30,32,33,34,47,52,53,54,55,56,57,58,59,60,61,62,63,],[40,-22,-31,-34,-35,40,40,40,40,40,-37,-36,40,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,]),'GT':([23,24,26,27,28,29,30,32,33,34,47,52,53,54,55,56,57,58,59,60,61,62,63,],[41,-22,-31,-34,-35,41,41,41,41,41,-37,-36,41,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,]),'GE':([23,24,26,27,28,29,30,32,33,34,47,52,53,54,55,56,57,58,59,60,61,62,63,],[42,-22,-31,-34,-35,42,42,42,42,42,-37,-36,42,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,]),'EQ':([23,24,26,27,28,29,30,32,33,34,47,52,53,54,55,56,57,58,59,60,61,62,63,],[43,-22,-31,-34,-35,43,43,43,43,43,-37,-36,43,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,]),'NE':([23,24,26,27,28,29,30,32,33,34,47,52,53,54,55,56,57,58,59,60,61,62,63,],[44,-22,-31,-34,-35,44,44,44,44,44,-37,-36,44,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,]),'COLON':([24,26,27,28,29,30,47,52,54,55,56,57,58,59,60,61,62,63,66,68,],[-22,-31,-34,-35,48,49,-37,-36,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,69,70,]),'MUL':([24,26,27,28,47,52,54,55,56,57,58,59,60,61,62,63,],[45,-31,-34,-35,-37,-36,45,45,45,45,45,45,45,45,-32,-33,]),'DIV':([24,26,27,28,47,52,54,55,56,57,58,59,60,61,62,63,],[46,-31,-34,-35,-37,-36,46,46,46,46,46,46,46,46,-32,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,48,49,69,70,],[2,64,65,71,72,]),'statement':([0,2,48,49,64,65,69,70,71,72,],[3,18,3,3,18,18,3,3,18,18,]),'assignment_statement':([0,2,48,49,64,65,69,70,71,72,],[4,4,4,4,4,4,4,4,4,4,]),'print_statement':([0,2,48,49,64,65,69,70,71,72,],[5,5,5,5,5,5,5,5,5,5,]),'if_statement':([0,2,48,49,64,65,69,70,71,72,],[6,6,6,6,6,6,6,6,6,6,]),'while_statement':([0,2,48,49,64,65,69,70,71,72,],[7,7,7,7,7,7,7,7,7,7,]),'function_definition':([0,2,48,49,64,65,69,70,71,72,],[8,8,8,8,8,8,8,8,8,8,]),'tuple_statement':([0,2,48,49,64,65,69,70,71,72,],[9,9,9,9,9,9,9,9,9,9,]),'string_statement':([0,2,48,49,64,65,69,70,71,72,],[10,10,10,10,10,10,10,10,10,10,]),'expression_list':([13,],[22,]),'expression':([13,14,15,19,20,21,36,],[23,29,30,32,33,34,53,]),'term':([13,14,15,19,20,21,36,37,38,39,40,41,42,43,44,],[24,24,24,24,24,24,24,54,55,56,57,58,59,60,61,]),'factor':([13,14,15,19,20,21,25,36,37,38,39,40,41,42,43,44,45,46,],[26,26,26,26,26,26,47,26,26,26,26,26,26,26,26,26,62,63,]),'else_statement':([64,],[67,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',28),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',32),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',33),
  ('statement -> assignment_statement','statement',1,'p_statement','parser.py',40),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',41),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',42),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',43),
  ('statement -> function_definition','statement',1,'p_statement','parser.py',44),
  ('statement -> tuple_statement','statement',1,'p_statement','parser.py',45),
  ('statement -> string_statement','statement',1,'p_statement','parser.py',46),
  ('assignment_statement -> IDENTIFIER ASSIGN expression','assignment_statement',3,'p_assignment_statement','parser.py',50),
  ('print_statement -> PRINT LPAREN expression RPAREN','print_statement',4,'p_print_statement','parser.py',54),
  ('tuple_statement -> LPAREN expression_list RPAREN','tuple_statement',3,'p_tuple_statement','parser.py',58),
  ('string_statement -> STRING','string_statement',1,'p_string_statement','parser.py',62),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',66),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',67),
  ('if_statement -> IF expression COLON statement_list else_statement','if_statement',5,'p_if_statement','parser.py',74),
  ('if_statement -> IF expression COLON statement_list','if_statement',4,'p_if_statement','parser.py',75),
  ('else_statement -> ELSE COLON statement_list','else_statement',3,'p_else_statement','parser.py',82),
  ('while_statement -> WHILE expression COLON statement_list','while_statement',4,'p_while_statement','parser.py',86),
  ('function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON statement_list','function_definition',6,'p_function_definition','parser.py',90),
  ('expression -> term','expression',1,'p_expression','parser.py',94),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser.py',95),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser.py',96),
  ('expression -> expression LT term','expression',3,'p_expression','parser.py',97),
  ('expression -> expression LE term','expression',3,'p_expression','parser.py',98),
  ('expression -> expression GT term','expression',3,'p_expression','parser.py',99),
  ('expression -> expression GE term','expression',3,'p_expression','parser.py',100),
  ('expression -> expression EQ term','expression',3,'p_expression','parser.py',101),
  ('expression -> expression NE term','expression',3,'p_expression','parser.py',102),
  ('term -> factor','term',1,'p_term','parser.py',109),
  ('term -> term MUL factor','term',3,'p_term','parser.py',110),
  ('term -> term DIV factor','term',3,'p_term','parser.py',111),
  ('factor -> NUMBER','factor',1,'p_factor','parser.py',118),
  ('factor -> IDENTIFIER','factor',1,'p_factor','parser.py',119),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',120),
  ('factor -> MINUS factor','factor',2,'p_factor','parser.py',121),
]
